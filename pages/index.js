import Head from 'next/head'
import React, { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css'

import { GrFormSearch } from 'react-icons/gr';
import { TiPlusOutline } from 'react-icons/ti';
import { Card } from './componenets/Card.js'
import { Map } from './componenets/Map.js'
import { Tab } from './componenets/Tab';
import { Guild } from './componenets/Guild';
import { History } from './componenets/History';

export default function Home() {

    const [chars, setchars] = useState([{
        id: String(Math.random()),
        type: "char",
        name: 'Mage',
        img: 'https://static.wikia.nocookie.net/lawler-rpg/images/2/2c/Dissidia_black_mage_of_light_by_isaiahjordan-d5hz8q6.png',
    },
    {
        id: String(Math.random()),
        type: "char",
        name: 'Knight',
        img: 'https://static.wikia.nocookie.net/finalfantasy/images/c/c8/WotV_Agrias.png  ',
    },
    {
        id: String(Math.random()),
        type: "char",
        name: 'Archer',
        img: 'https://i.pinimg.com/originals/02/54/64/0254645c2624a84aac9a18e92df27c82.png',
    },
    ])
    const [maps, setmaps] = useState([{
        id: String(Math.random()),
        type: "map",
        img: "https://i.pinimg.com/originals/9c/92/eb/9c92ebecdd604aa01e0827d864f0dae1.jpg",
        name: "Earth Chain"
    }, {
        id: String(Math.random()),
        type: "map",
        img: "https://cdnb.artstation.com/p/assets/images/images/026/524/075/large/daniel-mitchell-daniel-mitchell-forest-settlement.jpg",
        name: "Lost Woods"
    },
    ])
    const [active, setactive] = useState("Characters")
    const [rightactive, setrightactive] = useState()
    const [tabs, settabs] = useState([])


    function showinfo(info) {
        if (info) {
            if (!tabs.filter(e => e.id === info.id).length > 0) {
                settabs([...tabs, info]);
            }

            switch (info.type) {
                case "char":
                    setrightactive(<Charinfos props={info} />)
                    break;

                case "map":
                    setrightactive(<Mapinfos props={info} />)
                    break;
            }
        } else {
            setrightactive(<> </>)
        }
    }

    function removetab(id) {

        let tabsindex = tabs.findIndex(object => {
            return object.id == id;
        });
        settabs(tabs.filter(item => item.id != id))

        if (tabs.length - 1 == 0) {
            showinfo(null)
        }
        else {
            showinfo(tabsindex > 0 ? tabs[tabsindex - 1] : tabs[tabsindex + 1]);
        }
    }

    function createchar() {
        let obj = {
            id: String(Math.random()),
            type: "char",
            name: 'Priest',
            img: 'https://i.pinimg.com/originals/c6/67/96/c66796cf76594c938133a12f4ba5afe4.png',
        }
        setchars(chars => [obj, ...chars])
    }
    return (
        <div className={styles.container} id='container'>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="true" />
                <link href="https://fonts.googleapis.com/css2?family=Bakbak+One&display=swap" rel="stylesheet" />
            </Head>

            <aside className={styles.aside}>
                <div className={styles.logo}> <img src="https://www.rederpg.com.br/wp/wp-content/uploads/2020/05/DD-Logo.png" alt="" /></div>
                <fieldset>
                    <input type="text" placeholder='Search Something' />
                    <GrFormSearch className={styles.icon} />
                </fieldset>
                <nav>
                    <a href="#" onClick={() => { setactive("Characters") }}>CHARACTERS</a>
                    <a href="#" onClick={() => { setactive("Maps") }}>MAPS</a>
                    <a href="#" onClick={() => { setactive("Guilds") }}>GUILDS</a>
                    <a href="#" onClick={() => { setactive("Histories") }}>HISTORIES</a>
                    <a href="#">DICES</a>
                </nav>

                <div className={styles.creator} onClick={createchar}>
                    <TiPlusOutline />
                </div>
            </aside>
            <main className={styles.main}>
                {active === "Characters" && <Characters />}
                {active === "Maps" && <Maps />}
                {active === "Guilds" && <Guild />}
                {active === "Histories" && <History />}

            </main>

            <div className={styles.right} id='right'>
                <div className={styles.infosnav} >
                    {
                        tabs.map(function (element) {
                            return <Tab key={Math.random()}
                                infos={element} removetab={removetab} showinfo={showinfo} />
                        })
                    }
                </div>
                {rightactive}
            </div>
        </div>
    )



    function Characters() {
        return (
            chars.map(function (elements) {
                return (<div key={Math.random()} onClick={() => { showinfo(elements) }}> <Card data={elements} /></div>)
            })
        )
    }

    function Maps() {
        return (
            maps.map(function (elements) {

                return (<div key={Math.random()} onClick={() => { showinfo(elements) }}> <Map data={elements} /></div>)
            })
        )
    }

    function Guilds() {
        return (
            maps.map(function (elements) {
                return (<div key={Math.random()} > <Guild data={elements} /></div>)
            })
        )
    }

    function Histories() {
        return (
            maps.map(function (elements) {
                return (<div key={Math.random()} > <History data={elements} /></div>)
            })
        )
    }

    function Charinfos(props) {
        const data = props.props;
        return (
            <div>
                <h1>{data ? data.name : alt}</h1>
            </div>
        )
    }

    function Mapinfos(props) {
        const data = props.props;
        return (
            <div>
                <h1>{data ? data.name : alt}</h1>
            </div>
        )
    }



    function createscree() {
        return (
            <div>
                <form action={createchar}>


                    <button>Done</button>
                </form>
            </div>
        )
    }
}